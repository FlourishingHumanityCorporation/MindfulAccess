#!/bin/bash

# Configuration
APP_NAME="{{APP_NAME}}"
APP_IDENTIFIER="{{APP_IDENTIFIER}}"

# Get the directory of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Source common utilities
source "$SCRIPT_DIR/utils.sh"

# Logging
log_info() {
    echo "[INFO] $1"
}

log_error() {
    echo "[ERROR] $1" >&2
}

# Check if app is running
check_running() {
    if pgrep -f "app_protector.sh --run" > /dev/null; then
        log_info "Stopping running instance..."
        pkill -f "app_protector.sh --run"
        sleep 1
    fi
}

# Backup before uninstall
backup_before_remove() {
    if [ -d "/Applications/$APP_NAME.app" ]; then
        log_info "Creating final backup before uninstall..."
        local backup_dir
        backup_dir=$(get_backup_dir)
        local backup_name="$APP_NAME-pre-uninstall-$(date +%Y%m%d_%H%M%S).tar.gz"
        create_backup "/Applications/$APP_NAME.app" "$backup_dir" "$backup_name" || return 1
    fi
    return 0
}

# Unload and remove launch agent
remove_launch_agent() {
    log_info "Removing launch agent..."
    local launch_agent_path
    launch_agent_path=$(get_launch_agent_path)
    
    if [ -f "$launch_agent_path" ]; then
        launchctl unload "$launch_agent_path" 2>/dev/null
        safe_remove "$launch_agent_path" || return 1
    else
        log_info "Launch agent not found (already removed)"
    fi
    return 0
}

# Remove app bundle
remove_app() {
    log_info "Removing $APP_NAME..."
    if [ -d "/Applications/$APP_NAME.app" ]; then
        safe_remove "/Applications/$APP_NAME.app" true || return 1
    else
        log_info "Application not found in /Applications (already removed)"
    fi
    return 0
}

# Remove configuration files
remove_config() {
    log_info "Removing configuration..."
    while IFS= read -r path; do
        [[ -z "$path" ]] && continue
        if [ -e "$path" ]; then
            safe_remove "$path" || return 1
        fi
    done < <(get_config_paths)
    return 0
}

# Main uninstallation process
main() {
    log_info "Starting uninstallation of $APP_NAME..."
    
    # Create backup if not in dry run mode
    if [ "$DRY_RUN" != "true" ]; then
        backup_before_remove || exit 1
    fi
    
    # Stop running instance
    check_process "app_protector.sh --run"
    
    # Remove components
    remove_launch_agent || exit 1
    remove_app || exit 1
    remove_config || exit 1
    
    if [ "$DRY_RUN" = "true" ]; then
        log_info "Dry run complete. No changes were made."
    else
        log_info "Uninstallation complete!"
    fi
}

# Run main function
main 